// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UCABPagaloTodoMS.Infrastructure.Database;

#nullable disable

namespace UCABPagaloTodoMS.Infrastructure.Migrations
{
    [DbContext(typeof(UCABPagaloTodoDbContext))]
    [Migration("20230720044753_InicialEntregaII")]
    partial class InicialEntregaII
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ArchivoConciliacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ServicioPrestadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlDescarga")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServicioPrestadoId");

                    b.ToTable("ArchivoConciliacions");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ArchivoDeuda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConsumidorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ServicioPrestadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArchivoDeudas");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.Campo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConfiguracionPagoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Longitud")
                        .HasColumnType("int");

                    b.Property<string>("NombreCampo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Requerido")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracionPagoId");

                    b.ToTable("Campos");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.CampoPago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Longitud")
                        .HasColumnType("int");

                    b.Property<string>("NombreCampo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PagoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PagoId");

                    b.ToTable("CamposPago");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ConfiguracionPago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ServicioPrestadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracionPagos");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.Pago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConsumidorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ServicioPrestadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumidorId");

                    b.HasIndex("ServicioPrestadoId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ServicioPrestado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConfiguracionPagoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Costo")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstatusServicio")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PrestadorServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TipoPago")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrestadorServicioId");

                    b.ToTable("ServiciosPrestados");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.Administrador", b =>
                {
                    b.HasBaseType("UCABPagaloTodoMS.Core.Entities.Usuario");

                    b.Property<string>("NombreAdministrador")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.Consumidor", b =>
                {
                    b.HasBaseType("UCABPagaloTodoMS.Core.Entities.Usuario");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ArchivoDeudaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstatusCuenta")
                        .HasColumnType("bit")
                        .HasColumnName("Consumidor_EstatusCuenta");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Consumidor");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PrestadorServicio", b =>
                {
                    b.HasBaseType("UCABPagaloTodoMS.Core.Entities.Usuario");

                    b.Property<bool>("EstatusCuenta")
                        .HasColumnType("bit");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PrestadorServicio");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ArchivoConciliacion", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.ServicioPrestado", null)
                        .WithMany("ArchivosPertenecientes")
                        .HasForeignKey("ServicioPrestadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.Campo", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.ConfiguracionPago", null)
                        .WithMany("Campos")
                        .HasForeignKey("ConfiguracionPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.CampoPago", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.Pago", null)
                        .WithMany("CamposPago")
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.Pago", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.Consumidor", null)
                        .WithMany("PagosRealizados")
                        .HasForeignKey("ConsumidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UCABPagaloTodoMS.Core.Entities.ServicioPrestado", null)
                        .WithMany("PagosPorServicioRealizados")
                        .HasForeignKey("ServicioPrestadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ServicioPrestado", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.PrestadorServicio", null)
                        .WithMany("ServiciosPrestados")
                        .HasForeignKey("PrestadorServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ConfiguracionPago", b =>
                {
                    b.Navigation("Campos");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.Pago", b =>
                {
                    b.Navigation("CamposPago");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ServicioPrestado", b =>
                {
                    b.Navigation("ArchivosPertenecientes");

                    b.Navigation("PagosPorServicioRealizados");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.Consumidor", b =>
                {
                    b.Navigation("PagosRealizados");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PrestadorServicio", b =>
                {
                    b.Navigation("ServiciosPrestados");
                });
#pragma warning restore 612, 618
        }
    }
}
